Given an array nums, write a function to move all 0's to the end of it while maintaining the relative order of the non-zero elements.

Example:

Input: [0,1,0,3,12]
Output: [1,3,12,0,0]

Note:

    You must do this in-place without making a copy of the array.
    Minimize the total number of operations.
=========================================================
sol 1

class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int n = nums.size();
        int k=-1,i=0,temp;
        while(i<n)
        {
            if(nums[i] != 0)
            {
                k++;
                swap(nums[k],nums[i]);
            }           
        i++;    
            
        }
        
    }
};

================================================================>
sol 2
class Solution {
public:
    void moveZeroes(vector<int>& nums) {
        int n = nums.size();
        int k=0,i=0,temp;
        while(i<n)
        {
            if(nums[i] != 0)
            {
                
                temp = nums[i];
                nums[i] = 0;
                nums[k] = temp;
                k++;
                
            }
            
            
        i++;    
            
        }
        
    }
};



